## based on https://blog.john-pfeiffer.com/drupal-with-docker-compose-and-nginx-and-php-fpm-and-mariadb/
## with https://www.digitalocean.com/community/tutorials/how-to-install-drupal-with-docker-compose-fr
## and https://www.nginx.com/blog/nginx-caching-guide/

# server {
#     listen 80;
#     listen [::]:80;
# 
#     server_name premap.ecollectivites.fr;
# 
#     location ~ /.well-known/acme-challenge {
#         allow all;
#         root /var/www/html;
#     }
# 
#     location / {
#         rewrite ^ https://$host$request_uri? permanent;
#     }
# }

################# Cache ######################
fastcgi_cache_path /var/cache/nginx levels=1:2 keys_zone=drupal_cache:10m inactive=1d max_size=500m use_temp_path=off;
## The cache key.
fastcgi_cache_key $scheme$request_method$host$request_uri;
add_header X-Cache $upstream_cache_status;

# map req.url $no_cache {
#     default 0;
#     ## Feeds gets cached, causing errors
#     ~/feed/.* 1;
#     ~/feed/[^/]+/import 1;
#     ~/feed/[^/]+/import.* 1;
#     ## base on https://makina-corpus.com/drupal/varnish-et-drupal-gerer-un-cache-anonyme-etendu
#     ~/admin 1;
#     ~/admin/.* 1;
#     ~/batch 1;
#     ~/batch.* 1;
#     ~^/entityreference/autocomplete/.* 1;
#     ~^/file/[^/]+/delete 1;
#     ~^/file/[^/]+/edit 1;
#     ~^/file/[^/]+/edit/[^/]+ 1;
#     ~^/file/[^/]+/edit/add/[^/]+/[^/]+ 1;
#     ~^/file/[^/]+/translate 1;
#     ~^/file/[^/]+/translate/delete/[^/]+ 1;
#     ~^/file/add 1;
#     ~^/file/add/.* 1;
#     ~^/media/[^/]+/edit/.* 1;
#     ~^/media/[^/]+/format-form 1;
#     ~^/media/browser 1;
#     ~^/node/[^/]+/delete 1;
#     ~^/node/[^/]+/edit 1;
#     ~^/node/[^/]+/edit/[^/]+ 1;
#     ~^/node/[^/]+/edit/add/[^/]+/[^/]+ 1;
#     ~^/node/[^/]+/revisions 1;
#     ~^/node/[^/]+/revisions/[^/]+/delete 1;
#     ~^/node/[^/]+/revisions/[^/]+/revert 1;
#     ~^/node/[^/]+/translate 1;
#     ~^/node/[^/]+/translate/delete/[^/]+ 1;
#     ~^/node/add 1;
#     ~^/node/add/.* 1;
#     ~^/taxonomy/term/[^/]+/edit 1;
#     ~^/taxonomy/term/[^/]+/edit/.* 1;
#     ~^/taxonomy/term/[^/]+/translate 1;
#     ~^/taxonomy/term/[^/]+/translate/.* 1;
#     ~^/user/[^/]+ 1;
#     ~^/user/[^/]+/cancel 1;
#     ~^/user/[^/]+/edit 1;
#     ~^/user/[^/]+/edit/account 1;
# }
##############################################

server {
    charset utf-8;

    # listen 443 ssl;
    # listen [::]:443 ssl;
    listen      80;
    server_name premap.ecollectivites.fr;
	
    index index.php index.html index.htm;
    root /var/www/html;

    server_tokens off;

    # add_header X-Frame-Options "SAMEORIGIN" always; ## already set
    add_header X-XSS-Protection "1; mode=block" always;
    # add_header X-Content-Type-Options "nosniff" always; ## already set
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src * data: 'unsafe-eval' 'unsafe-inline'" always;

    ################# Cache ######################
    fastcgi_cache               drupal_cache;
    # fastcgi_cache_min_uses      3;            ## Not working
    fastcgi_cache_valid         200 302 10s;    # Store pages and redirects for 1 hour.
    fastcgi_cache_valid         301 1d;         # Store permanent redirects for 1 day.
    fastcgi_cache_valid         404 10m;
    fastcgi_cache_valid         any 1m;         # Store all other requests (errors) for 1 minute.
    fastcgi_cache_revalidate    on;             # 
    fastcgi_cache_lock          on;
    fastcgi_cache_methods       GET;
    
    ###### allow authenticated requests (i.e. with ~SESS cookie) to be cached #######
    ## based on https://github.com/perusio/drupal-with-nginx/blob/D7/apps/drupal/microcache_fcgi_auth.conf

    ## If there are any upstream errors use whatever it is available.
    fastcgi_cache_use_stale     error timeout invalid_header updating http_500;
    ## The Cache-Control and Expires headers should be delivered untouched
    ## from the upstream to the client.
    # fastcgi_ignore_headers      "Cache-Control" "Expires" "Set-Cookie" "Vary";
    # fastcgi_pass_header         Set-Cookie;
    # fastcgi_pass_header         Cookie;
    ## Bypass the cache.
    # fastcgi_no_cache          $no_cache;
    # fastcgi_cache_bypass      $no_cache;
    ##############################################

    location = /favicon.ico {
        log_not_found off;
        access_log off;
    }

    location = /robots.txt {
        allow all;
        log_not_found off;
        access_log off;
    }

    ## Very rarely should these ever be accessed outside of your lan
    location ~* \.(txt|log)$ {
        deny all;
    }

    location ~ \..*/.*\.php$ {
        return 403;
    }

    location ~ ^/sites/.*/private/ {
        return 403;
    }

    ## Block access to "hidden" files and directories whose names begin with a
    ## period. This includes directories used by version control systems such
    ## as Subversion or Git to store control files.
    location ~ (^|/)\. {
        return 403;
    }
	
    ## Restrict access to SolR
    location ~ /solr {
        allow 192.168.20.59; ## Allow a single remote host
        allow 192.168.201.1;
        deny all; ## Deny everyone else
        proxy_pass http://search-dev:8983;
        proxy_bind $server_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        ## Bypass the cache.
        proxy_no_cache          1;
        proxy_cache_bypass      1;
    }

    location / {
        try_files $uri /index.php?$query_string;
    }

    location @rewrite {
        rewrite ^/(.*)$ /index.php?q=$1;
    }

    ## Don't allow direct access to PHP files in the vendor directory.
    location ~ /vendor/.*\.php$ {
        deny all;
        return 404;
    }
	
	rewrite ^/core/authorize.php/core/authorize.php(.*)$ /core/authorize.php$1;

    ## In Drupal 8, we must also match new paths where the '.php' appears in
    ## the middle, such as update.php/selection. The rule we use is strict,
    ## and only allows this pattern with the update.php front controller.
    ## This allows legacy path aliases in the form of
    ## blog/index.php/legacy-path to continue to route to Drupal nodes. If
    ## you do not have any paths like that, then you might prefer to use a
    ## laxer rule, such as:
    ##   location ~ \.php(/|$) {
    ## The laxer rule will continue to work if Drupal uses this new URL
    ## pattern with front controllers other than update.php in a future
    ## release.
    location ~ '\.php$|^/update.php' {
	    try_files $uri =404;
        include fastcgi_params;
        fastcgi_split_path_info ^(.+?\.php)(|/.*)$;
        ## Block httpoxy attacks. See https://httpoxy.org/.
        fastcgi_param HTTP_PROXY "";
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;
        fastcgi_intercept_errors on;

        fastcgi_pass drupal-dev:9000;
        fastcgi_index index.php;
    }

    ## Fighting with Styles? This little gem is amazing.
    location ~ ^/sites/.*/files/styles/ {
        try_files $uri @rewrite;
    }

    ## Handle private files through Drupal.
    location ~ ^/system/files/ {
        try_files $uri /index.php?$query_string;
    }

    ## prevent hotlinking
    location ~ ^/sites/.*/files/ {
        valid_referers none blocked premap.ecollectivites.fr;
        if ($invalid_referer) {
          return 403;
        }
    }

    location ~* \.(js|css|png|jpg|jpeg|gif|ico)$ {
        ## prevent hotlinking
        valid_referers none blocked premap.ecollectivites.fr;
        if ($invalid_referer) {
          return 403;
        }
        ## Tell client to cache static files locally
        add_header Cache-Control "public, no-transform";
        expires max;
        log_not_found off;
    }

}
